# üé¨ How to Watch Your Stream in VLC Player

## üéØ Two Ways to Stream to VLC

### Option 1: RTSP Stream (Recommended ‚≠ê)
**Best for:** Lowest latency, direct connection
**URL to use:** `rtsp://localhost:8554/mystream`

### Option 2: HLS Stream 
**Best for:** When RTSP doesn't work
**URL to use:** `http://localhost:8888/mystream/index.m3u8`

---

## üöÄ Quick Setup - RTSP (Recommended)

### Step 1: Start Your System
```bash
# Terminal 1: Start MediaMTX
mediamtx.exe -config mediamtx.yml

# Terminal 2: Start Publisher
cd live_feed
python streaming/publisher.py
```

### Step 2: Open VLC
1. **Open VLC Player**
2. **Media** ‚Üí **Open Network Stream** (or press `Ctrl+N`)
3. **Enter URL:** `rtsp://localhost:8554/mystream`
4. **Click Play**

### What You'll See:
- ‚úÖ Your webcam feed with **blue timestamps**
- ‚úÖ Very low latency (under 1 second!)
- ‚úÖ Smooth playback

---

## üåê Alternative Setup - HLS

### If RTSP doesn't work, try HLS:

### Step 1: Same startup as above

### Step 2: Open VLC
1. **Media** ‚Üí **Open Network Stream**
2. **Enter URL:** `http://localhost:8888/mystream/index.m3u8`
3. **Click Play**

### What You'll See:
- ‚úÖ Your webcam feed with blue timestamps
- ‚ö†Ô∏è Higher latency (2-3 seconds)
- ‚úÖ More compatible with all systems

---

## ‚ö° VLC Optimization Settings

### For Best Performance in VLC:

#### 1. Reduce Caching (Lower Latency)
1. **Tools** ‚Üí **Preferences**
2. **Show settings:** "All" (bottom left)
3. **Input / Codecs** ‚Üí **Network Caching (ms):** Change to `300`
4. **Click Save**

#### 2. Hardware Acceleration
1. **Tools** ‚Üí **Preferences**
2. **Input / Codecs**
3. **Hardware-accelerated decoding:** Enable
4. **Click Save**

#### 3. For RTSP Streams Specifically
1. **Tools** ‚Üí **Preferences** ‚Üí **Show All**
2. **Input / Codecs** ‚Üí **Access modules** ‚Üí **RTP/RTSP**
3. **RTP over RTSP (TCP):** Check this if you have connection issues
4. **RTSP frame buffer size:** Set to `200000`

---

## üîß Complete URLs for Different Scenarios

### Local Network (Same Computer):
```
RTSP: rtsp://localhost:8554/mystream
HLS:  http://localhost:8888/mystream/index.m3u8
```

### From Another Computer on Same Network:
```
RTSP: rtsp://[YOUR_IP]:8554/mystream
HLS:  http://[YOUR_IP]:8888/mystream/index.m3u8
```

**To find YOUR_IP:**
```cmd
ipconfig
# Look for "IPv4 Address" (usually 192.168.x.x)
```

Example:
```
RTSP: rtsp://192.168.1.100:8554/mystream
HLS:  http://192.168.1.100:8888/mystream/index.m3u8
```

---

## üìä Comparison: RTSP vs HLS in VLC

| Feature | RTSP | HLS |
|---------|------|-----|
| **Latency** | 0.5-1 second ‚≠ê | 2-3 seconds |
| **Compatibility** | Good | Excellent ‚≠ê |
| **Stability** | Good ‚≠ê | Excellent ‚≠ê |
| **Setup** | Simple ‚≠ê | Simple ‚≠ê |
| **Buffering** | Minimal ‚≠ê | Some buffering |

**Recommendation:** Start with RTSP for lowest latency!

---

## üêõ Troubleshooting VLC Issues

### Problem: "VLC does not support RTSP protocol"
**Solution:** Use HLS instead
```
http://localhost:8888/mystream/index.m3u8
```

### Problem: "Stream not found" or "Connection failed"
**Check:**
1. ‚úÖ MediaMTX is running and shows "listener opened on :8554"
2. ‚úÖ Publisher is running and shows "Publisher started successfully"
3. ‚úÖ Wait 5-10 seconds after starting publisher

### Problem: High latency (slow/delayed video)
**Solutions:**
1. Use RTSP instead of HLS
2. Reduce VLC network caching to 300ms
3. Enable hardware acceleration in VLC

### Problem: Choppy/stuttering video
**Solutions:**
1. Lower video resolution in Django settings:
```python
STREAMING_CONFIG = {
    'VIDEO_WIDTH': 640,    # Instead of 1280
    'VIDEO_HEIGHT': 480,   # Instead of 720
}
```
2. Increase VLC network caching to 1000ms
3. Close other applications using camera

### Problem: "No picture" but audio works
**Solution:** Install VLC codecs or try different hardware acceleration

---

## üéÆ VLC Keyboard Shortcuts for Monitoring

While watching the stream:
- **Space:** Pause/Play
- **F:** Fullscreen
- **Ctrl+I:** Show stream information
- **Ctrl+J:** Show codec information
- **Ctrl+H:** Hide/show controls
- **+/-:** Volume up/down

---

## üì± Multiple VLC Instances

You can open multiple VLC windows to compare:

### Window 1: RTSP Stream (Low Latency)
```
rtsp://localhost:8554/mystream
```

### Window 2: HLS Stream (Higher Latency) 
```
http://localhost:8888/mystream/index.m3u8
```

### What you'll notice:
- RTSP shows video ~1 second faster than HLS
- Both show the same blue timestamps from your publisher
- Perfect for testing latency differences!

---

## üåü Pro Tips for VLC Streaming

### 1. Command Line (Advanced)
You can also start VLC from command line:
```cmd
vlc rtsp://localhost:8554/mystream
```

### 2. Create VLC Shortcuts
Create desktop shortcuts with these URLs for quick access:
- Right-click desktop ‚Üí New ‚Üí Shortcut
- Target: `"C:\Program Files\VideoLAN\VLC\vlc.exe" rtsp://localhost:8554/mystream`

### 3. Network Streaming Menu
In VLC: **View** ‚Üí **Playlist** ‚Üí **Network Streams** ‚Üí Add your URLs for quick access

### 4. Recording from Stream
In VLC while playing:
- **Media** ‚Üí **Convert/Save**
- **Network** tab ‚Üí Enter stream URL
- **Convert/Save** ‚Üí Choose output format
- Records directly from stream!

---

## üéØ Which Option Should You Use?

### For **Development/Testing:** 
‚úÖ **RTSP** (`rtsp://localhost:8554/mystream`)
- Lowest latency for immediate feedback
- See changes instantly

### For **Demonstration:**
‚úÖ **HLS** (`http://localhost:8888/mystream/index.m3u8`) 
- More reliable
- Better for showing others

### For **Production:**
‚úÖ **Both** - RTSP for monitoring, HLS for users

---

## ‚úÖ Quick Test Checklist

Before opening VLC:
1. ‚òëÔ∏è MediaMTX running (port 8554 for RTSP, 8888 for HLS)
2. ‚òëÔ∏è Publisher running ("Publisher started successfully")
3. ‚òëÔ∏è Wait 5-10 seconds for stream to be available
4. ‚òëÔ∏è Test with both URLs if one doesn't work

**Your stream is ready when you see blue timestamps in VLC!**